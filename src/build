#!/bin/sh

ccomp32=i686-w64-mingw32-gcc
ccomp64=x86_64-w64-mingw32-gcc
cppcomp32=i686-w64-mingw32-g++
cppcomp64=x86_64-w64-mingw32-g++
ar32=i686-w64-mingw32-ar
ar64=x86_64-w64-mingw32-ar
subdir1=`dirname $PWD`
subdir0=`dirname $subdir1`
thisdir=${subdir1##*/}
win=$HOME/.wine/drive_c
src=$PWD

sizeopt="-Os -fomit-frame-pointer -fno-stack-protector -mno-stack-arg-probe"
cppopt="-fno-threadsafe-statics -fno-rtti -fno-exceptions"
cfshared="-std=c++17 -static -static-libgcc -static-libstdc++ -s -fno-ident -fno-asynchronous-unwind-tables -ffunction-sections -nostdlib -fno-sized-deallocation -march=core2 -mfpmath=sse -flto $cppopt $sizeopt"

phead="pch.h"

build ()
{ 
for i in "$@"
do
case $i in
    -g)
    echo "generating $arch $phead.gch"
    $cppcomp $cfshared -x c++-header -o $obj/$phead.gch -c $src/pch.cpp
    return
    ;;
esac
done
cd $obj
    echo "compiling $arch..."
if [ ! -f "$obj/$phead.gch" ]; then
    echo "precompiled header doesn't exist"
    build -g
fi
if [ -f "$src/$phead.gch" ]; then
    rm $src/$phead.gch
fi
ln -s $obj/$phead.gch $src
    $cppcomp -c $cfshared -include $src/$phead -D_UNICODE -DUNICODE -municode -include $src/pch.h $src/conv.cpp $src/memory.cpp $src/stl.cpp $src/patch.cpp $src/main.cpp
    $cppcomp -c $cfshared $src/dll_dependency.S
    $ccomp -c $cfshared $src/dll_math.c
    $artool cr libmisc.a conv.o memory.o stl.o patch.o dll_dependency.o
    $cppcomp -c $cfshared -include $src/pch.h $src/conv.cpp $src/memory.cpp $src/stl.cpp $src/patch.cpp $src/main.cpp
    $artool cr libmisca.a conv.o memory.o stl.o patch.o dll_dependency.o 
    rm $src/$phead.gch
}
obj=$subdir1/obj64
cppcomp=$cppcomp64
ccomp=$ccomp64
artool=$ar64
arch=win64
build $@

#$cppcomp64 $cfshared -D_UNICODE -DUNICODE -municode -eentry -include $src/pch.h $src/test.cpp $obj/libmisc.a -lmsvcrt -lkernel32 

obj=$subdir1/obj32
cppcomp=$cppcomp32
ccomp=$ccomp32
artool=$ar32
arch=win32
build $@

#$cppcomp $cfshared -D_UNICODE -DUNICODE -municode -e_entry -include $src/pch.h $src/test.cpp $obj/libmisc.a -lmsvcrt -lkernel32 
